services:
  mysql:
    image: mysql
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - ./term_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:3306"
    networks:
      - backend
#------------------------------------------------------------------
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway-worktree
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    environment:
      - HOST=${HOST}
      - PORT=${API_GATEWAY_PORT}
      - DATA_SERVER_HOST=data-server
      - DATA_SERVER_PORT=${DATA_SERVER_PORT}
    networks:
      - backend
#------------------------------------------------------------------
  data-server:
    container_name: data-server
    build:
      context: ./data-server-worktree
    ports:
      - "${DATA_SERVER_PORT}:${DATA_SERVER_PORT}"
    environment:
      - HOST=${HOST}
      - PORT=${DATA_SERVER_PORT}
    networks:
      - backend
#------------------------------------------------------------------
  matching-key-server:
    depends_on:
      - api-gateway
    container_name: matching-key-server
    build:
      context: ./matching-key-server-worktree
    ports:
      - "${MATCHING_KEY_SERVER_PORT}:${MATCHING_KEY_SERVER_PORT}"
    environment:
      - HOST=${HOST}
      - PORT=${MATCHING_KEY_SERVER_PORT}
      - SERVICE_NAME=matching-key-server
      - API_GATEWAY_HOST=api-gateway
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - API_GATEWAY_EVENT_URI=${API_GATEWAY_EVENT_URI}
      - API_GATEWAY_TOPIC_URI=${API_GATEWAY_TOPIC_URI}
    networks:
      - backend
#------------------------------------------------------------------
  matching-server:
    depends_on:
      - api-gateway
    container_name: matching-server
    build:
      context: ./matching-server-worktree
    ports:
      - "${MATCHING_SERVER_PORT}:${MATCHING_SERVER_PORT}"
    environment:
      - HOST=${HOST}
      - PORT=${MATCHING_SERVER_PORT}
      - SERVICE_NAME=matching-server
      - API_GATEWAY_HOST=api-gateway
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - API_GATEWAY_EVENT_URI=${API_GATEWAY_EVENT_URI}
      - API_GATEWAY_TOPIC_URI=${API_GATEWAY_TOPIC_URI}
    networks:
      - backend
#------------------------------------------------------------------
  pii-detection-server:
    depends_on:
      - api-gateway
      - mysql
    container_name: pii-detection-server
    build:
      context: ./pii-detection-server-worktree
    ports:
      - "${PII_DETECTION_SERVER_PORT}:${PII_DETECTION_SERVER_PORT}"
    environment:
      - HOST=${HOST}
      - PORT=${PII_DETECTION_SERVER_PORT}
      - SERVICE_NAME=pii-detection-server
      - API_GATEWAY_HOST=api-gateway
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - API_GATEWAY_EVENT_URI=${API_GATEWAY_EVENT_URI}
      - API_GATEWAY_TOPIC_URI=${API_GATEWAY_TOPIC_URI}
    env_file:
      - ./pii-detection-server-worktree/.env.prod
    networks:
      - backend
#------------------------------------------------------------------
  pseudonymization-server:
    depends_on:
      - api-gateway
    container_name: pseudonymization-server
    build:
      context: ./pseudonymization-server-worktree
    ports:
      - "${PSEUDONYMIZATION_SERVER_PORT}:${PSEUDONYMIZATION_SERVER_PORT}"
    environment:
      - HOST=${HOST}
      - PORT=${PSEUDONYMIZATION_SERVER_PORT}
      - SERVICE_NAME=pseudonymization-server
      - API_GATEWAY_HOST=api-gateway
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - API_GATEWAY_EVENT_URI=${API_GATEWAY_EVENT_URI}
      - API_GATEWAY_TOPIC_URI=${API_GATEWAY_TOPIC_URI}
    networks:
      - backend


networks:
  backend:
    driver: bridge
